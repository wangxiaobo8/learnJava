从 Oracle 官网下载JDK 
安装完成过后需要设置一个JAVA_HOME的环境变量。指向JDK安装目录 类似：C:\Program Files\Java\jdk-17
然后把JAVA_HOME的bin目录添加到PATH中。类似 widows：Path=%JAVA_HOME%\bin; 这样就可以在DOS磁盘操作系统中
运行java。
输入 java -version 看到版本就成功了
	
方法：
	1.引用类型参数的传递，调用方的变量，和接受方的参数变量，指向同一个对象。
		双方任意一方对这个对象的修改，都会影响对方。	
	
构造构造方法：
	 1.实例在创建时通过 new 操作符会调用其对应的构造方法，构造方法用于初始化实例;
	 2.所有类都有构造方法，如果我们没有显示定义，编译器会自动生成一个默认的构造方法，它没有参数，没有方法体。
		如果我们显示定义，编译器不会自动生成默认构造方法。
	 3.可以定义多个构造方法，编译器根据参数自动判断;
	 4.可以在一个构造方法内部调用另一个构造方法，便于代码复用 this(参数...)
	 5.任何类的构造方法,第一行语句必须调用父类的构造方法,如果没有显示调用，编译器会自动加一句super();
		如果在第一行显示定义了super()方法，编译器则不会默认添加。
	 6.final修饰的属性必须在创建对象时初始化，随后不可修改。
	
	方法重载：Overload
		1.参数类型,个数,顺序至少有一个不同。
		2.与返回值和访问权限,抛出异常没有关系。
		3.不能通过访问权限，返回值类型，抛出的异常进行重载。
		
	方法重写：Override
		1.方法名，参数，返回值相同。
		2.子类方法不能缩小父类方法的访问权限。
		3.子类方法不能抛出比父类方法更多的异常(但子类方法可以不抛出异常)。
		4.存在于父类和子类之间。
		5.final 修饰的方法不能被重写。
		6.被覆盖的方法不能为private，否则在其子类中只是定义了一个新方法，并没有对其重写。
		
	继承：extends
		1.使用extends关键字实现继承。
		2.任何类 都继承 Object类 除了Object自身。
		3.一个类只能继承自一个类，可以实现多个接口。
		4.子类无法访问父类的 private字段或者方法。
		5.super关键字表示父类。
		6.final 修饰的类无法被继承。不能成为父类。
			java15开始 允许用sealed修饰类,并通过permits明确写出能够从该类继承的子类名称。
	
	向上转型：
		子类转父类
	
	向下转型：
		父类转子类 需要用 instanceof关键字判断一个实例是不是莫种类型。返回布尔类型。
	
	继承是 is 关系，组合是 has 关系。
	
	多态：
		特点：运行期才能动态决定调用的子类方法。
	
	抽象：abstract
		1.通过abstract定义的方法是抽象方法，它只有定义，没有实现。抽象方法定义了子类必须实现的接口规范。
		2.定义了抽象方法的类必须被定义为抽象类。
		3.从抽象类继承的子类必须实现抽象方法;否则该子类还是一个抽象类。
		4.抽象类无法被实例化，不能 new 对象。
	
	接口：interface 定义接口。 implements 实现接口。
		1.接口定义的方法默认为 public abstract.
		2.一个类可以继承多个接口。
		3.可以定义 default 方法。(jkd >=1.8)
		4.不能定义实例字段。
		5.接口的字段只能是 public static final 类型。
	
	静态：static
		1.static 修饰的字段 是共享的不是独立的。
		2. 建议使用 类名.静态字段 来访问静态对象。
		3.static 修饰的方法 是静态方法。 直接使用 类名.方法名调用。
		4.静态方法属于Class不属于实例，所以无法使用this变量，无法访问实例字段。只能访问静态字段。
		
	包：package 定义包; 导包 import 
		1.一个完整的类名应该是 包名.类名。
		2.在JVM虚拟机执行时，只看完整的类名。
		3.使用简单类名时，编译器先 在 当前package中查找，然后在 import中查找，最后在java.lang包中查找。
		4.编写class时，编译器默认导入当前包的其他类。默认导入 java.lang包。
		5.如果有两个类名称相同，例如：mr.jun.Arrays和java.util.Arrays,那么只能import其中一个，另一个必须写完整类名。
		6.推荐使用倒置的域名作为包名。
		
	作用域：public公开 protected受保护  private私有  package
		1.public 定义的类,接口 可以被任何类访问。
		2.public 定义的属性，方法可以被其他类访问调用。前提可以访问当前类。
		3.private 定义的方法,属性不能被其他类访问。权限限定在当前类的内部。
		4.protected 作用于继承关系; 定义为protected的字段，方法可以被子类访问，以及子类的子类。
		5.package 包的作用域是指 一个类允许访问同一个package包中没有Public private修饰的类，以及没有public protected
		private修饰的字段和方法。
		
	内部类：一个类中再声明一个类 Inner Class
		1.内部类的实例不能单独存在,必须依附于一个Outer Class的实例。
		2.匿名内部类
		3.静态内部类
		
	classpat和jar：
	
	模块：
	
	
		
		
		
		
		
	
		